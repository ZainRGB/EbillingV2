@model EbillingV2.Models.PatientBillingViewModel


@{
    ViewData["Title"] = "Capture";
}

<h2>
    @Model.PatFirstname @Model.PatSurname
    <div style="float:right;text-align:right;line-height:2;font-size:1rem;">
        <b>Patient Ref:</b> @Model.PatRefNo<br />
        <b>Attending Doctor:</b> Dr. @Model.AttDoc<br />
        <b>Medical Aid:</b> @Model.MedAidName<br />
       
    </div>
</h2>


@switch (@Model.HospitalId)
{
    case 1:
        <h3>Melomed Gatesville <span style="color:var(--green_clr);">@Model.Location / @Model.SubLocation</span></h3>
        break;
    case 2:
        <h3>Melomed Mitchells Plain <span style="color:var(--green_clr);">@Model.Location / @Model.SubLocation</span></h3>
        break;
    case 3:
        <h3>Melomed Bellville <span style="color:var(--green_clr);">@Model.Location / @Model.SubLocation</span></h3>
        break;
    case 6:
        <h3>Melomed Tokai <span style="color:var(--green_clr);">@Model.Location / @Model.SubLocation</span></h3>
        break;
    case 7:
        <h3>Melomed Richards Bay <span style="color:var(--green_clr);">@Model.Location / @Model.SubLocation</span></h3>
        break;
    default:
        <h3>Please Select a Hospital. <span style="color:var(--green_clr);">@Model.Location / @Model.SubLocation</span></h3>
        break;
}

<a href="/billing/@Model.HospitalId/@Model.LocationId/@Model.SubLocationId/@Model.Location/@Model.SubLocation" class="back_btn" title="Go Back"><i class="bi bi-box-arrow-in-left back_icon"></i></a>

<br />


<div class="form_container">

    <form asp-action="SubmitBarcode" method="post" style="display:inline;">
        <input type="hidden" asp-for="HospitalId" />
        <input type="hidden" asp-for="LocationId" />
        <input type="hidden" asp-for="SubLocationId" />
        <input type="hidden" asp-for="Location" />
        <input type="hidden" asp-for="SubLocation" />
        <input type="hidden" asp-for="PatRefNo" />
        <input type="hidden" asp-for="PatFirstname" />
        <input type="hidden" asp-for="PatSurname" />
        <input type="hidden" asp-for="AttDoc" />
        <input type="hidden" asp-for="MedAidName" />
        <input type="hidden" name="letter" value="@Context.Request.Query["letter"]" />

        <label for="Barcode">Scan or Enter Barcode </label><br />
        <input asp-for="Barcode" placeholder="Enter or Scan Barcode" class="input_txt" autofocus />

        <button type="submit" class="form_btn" >Submit</button>
    </form>

    <form method="get" action="@Url.Action("SearchResults", "Billing")" style="display:inline;">
        <input type="hidden" name="letter" value="@Context.Request.Query["letter"]" />
        <input type="hidden" name="HospitalId" value="@Model.HospitalId" />
        <input type="hidden" name="LocationId" value="@Model.LocationId" />
        <input type="hidden" name="SubLocationId" value="@Model.SubLocationId" />
        <input type="hidden" name="Location" value="@Model.Location" />
        <input type="hidden" name="SubLocation" value="@Model.SubLocation" />
        <button type="submit" class="form_btn">
            <i class="bi bi-box-arrow-in-left"></i> Back to Search
        </button>
    </form>


    @{
        var Scan = Context.Request.Query["Scan"];
    }

    @if (ViewBag.StockResults != null && ((List<StockResultViewModel>)ViewBag.StockResults).Any())
    {

        @foreach (var stock in ViewBag.StockResults as List<StockResultViewModel>)
        { 
            <span style="float:right;color:#4CAF50;">
                <b>Barcode Scanned:</b>
                @stock.Description <i class="bi bi-check2-circle" style="font-size:1.4rem;"></i>
            </span>
        }
    }
    else if (Scan == "Yes")
    {
        <span style="float:right;">
            Please Scan Barcode
        </span>
    }

    else if (Scan == "No" && ViewBag.StockResults == null )
    {
        <span style="float:right;">
            Please Scan Barcode
        </span>
    }

    else
    {
        <span style="float:right;">
            <h4 class="blink" style="color:orangered;">No barcode found!!!</h4>
        </span>
    }

 


</div>
<br />

@{
    var billingList = ViewBag.BillingResults as List<StockPatientBillingModel>;
    int billingCount = billingList != null ? billingList.Count : 0;
}




<table class="main_tbl">
    <tr>
        <th colspan="4" style="border:none;background-color:white;"><b>Captured Billing Items </b></th>
        <th colspan="2" style="border:none;background-color:white;text-align:right;">Total Billing Items: @billingCount</th>
        <th colspan="2" style="border:none;background-color:white;text-align:right;"><a href="/billing/@Model.HospitalId/@Model.LocationId/@Model.SubLocationId/@Model.Location/@Model.SubLocation" title="Go Back"><i class="bi bi-box-arrow-in-left back_icon2"></i> BACK</a></th>
        </tr>

    <tr>
        <th>Stock Code</th>
        <th>Description</th>
        <th>Pack Size</th>
        <th>Quantity</th>
        <th>Date</th>
        <th>Time</th>
        <th>Status</th>
        <th style="text-align:center;font-size:1.4rem;"><i class="bi bi-trash3"></i></th>
    </tr>
    @if (ViewBag.BillingResults != null && ((List<StockPatientBillingModel>)ViewBag.BillingResults).Any())
    {
        foreach (var item in ViewBag.BillingResults as List<StockPatientBillingModel>)
        {
            <tr>
                <td>@item.stockcode</td>
                <td>@item.description</td>
                <td>@item.packsize</td>
                <td style="width:120px;">

                    <select class="input_select" data-item-id="@item.id" onchange="updateStockQuantity(this)">
                        <option selected hidden value="@item.stockquantity">@item.stockquantity</option>
                        @for (int num = 1; num <= 100; num++)
                        {
                            if (num != item.stockquantity)
                            {
                                <option value="@num">@num</option>
                            }
                        }
                    </select>
                </td>
                <td>@item.tblday/@item.tblmonth/@item.tblyear</td>
                <td>@item.tbltime</td>
                <td>@item.status</td>
                <td style="text-align:center;width:30px;">
                    <button class="update_btn"
                            data-item-id="@item.id"
                            value="N"
                            name="active"
                            onclick="if (confirm('Are you sure you want to delete this item?')) updateStockQuantity(this);">
                        <i class="bi bi-trash3"></i>
                    </button>

                </td>
            </tr>
        }
    }
    else
    {
        <tr><td colspan="7">Please scan a barcode...</td></tr>
    }
</table>



<form method="post">
    @Html.AntiForgeryToken()
</form>

<script>
    function updateStockQuantity(button) {
        const id = button.getAttribute("data-item-id");
        const name = button.name;
        const value = button.value;

        const payload = { id: parseInt(id) };

        if (name === "active") {
            payload.active = value;
        } else {
            payload.stockQuantity = parseInt(value);
        }

        fetch('/Billing/UpdateStockQuantity', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
            },
            body: JSON.stringify(payload)
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                if (data.active === "N") {
                    location.reload(); // Refresh if record is marked inactive
                } else {
                    // Show checkmark next to button
                    const existingCheck = button.parentElement.querySelector(".update-success-check");
                    if (!existingCheck) {
                        const check = document.createElement("span");
                        check.textContent = "✔️";
                        check.className = "update-success-check";
                        check.style.marginLeft = "3px";
                        check.style.color = "green";
                        button.parentElement.appendChild(check);

                        // Optional: remove check after 3 seconds
                        setTimeout(() => check.remove(), 3000);
                    }
                }
            }
        })
        .catch(error => console.error('Error:', error));
    }


</script>


<script>

    //dont go back 2 pages but go back to the url DONT FORGET
                    let inactivityTime = 1200000; // 120 seconds
    let timeout;

    function resetTimer() {
        clearTimeout(timeout);
        timeout = setTimeout(() => {
            // window.history.go(-2); // Go back 2 pages
            window.location.href = '/billing/@Model.HospitalId/@Model.LocationId/@Model.SubLocationId/@Model.Location/@Model.SubLocation';
        }, inactivityTime);
    }

    // Reset the timer on user activity
    document.addEventListener("mousemove", resetTimer);
    document.addEventListener("keydown", resetTimer);
    document.addEventListener("click", resetTimer);
    document.addEventListener("scroll", resetTimer);

    // Start the timer initially
    resetTimer();

</script>

<script>
    function submitAndReload(e) {
        e.preventDefault(); // Prevent default form submission
        const form = document.getElementById("myForm");

        // Submit form via fetch (AJAX) or let it submit normally
        fetch(form.action, {
            method: 'POST',
            body: new FormData(form)
        })
        .then(() => {
            location.reload(); // Reload after successful submission
        })
        .catch(err => console.error("Error:", err));
    }
</script>